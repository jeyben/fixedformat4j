<document>
  <properties>
    <title>Fixed Format for Java</title>
    <author email="jacobvoneyben@gmail.com">Jacob von Eyben</author>
  </properties>
  <body>
    <release version="1.3.4" date="20101214" description="">
      <action dev="per.olesen" type="bug" issue="23">
        API change on generic value T in AbstractNumberFormatter to be restricted on java.lang.Number unnecessary.
      </action>
      <action dev="per.olesen" type="bug" issue="24">
        Revert fix for issue #22 on paddingChar honouring
      </action>
    </release>
    <release version="1.3.3" date="20101214" description="">
      <action dev="per.olesen" type="bug" issue="16">
        @FixedFormatDecimal with more than 3 decimals truncates decimals
      </action>
      <action dev="per.olesen" type="add" issue="20">
        AbstractDecimalFormatter should support explicit rounding
      </action>
      <action dev="per.olesen" type="bug" issue="21">
        AbstractDecimalFormatter DecimalFormat usage is not thread-safe
      </action>
      <action dev="per.olesen" type="bug" issue="22">
        AbstractDecimalFormatter hard codes '0' as padding char - should honor annotation paddingChar setting
      </action>
    </release>
    <release version="1.3.2" date="20101203" description="">
      <action dev="per.olesen" type="bug" issue="18">
        Sign.APPEND.apply fails to detect minus symbol correctly
      </action>
    </release>
    <release version="1.3.1" date="" description="">
      <action dev="per.olesen" type="add" issue="14">
         NullPointerException in export.
      </action>
    </release>
    <release version="1.3.0" date="" description="">
      <action dev="per.olesen" type="add" issue="13">
        Support skipping unparseable fields within records.
      </action>
      <action dev="jeyben" type="add">
        Added a Short/short build-in formatter and added this to the ByTypeFormatter.
      </action>
      <action dev="jeyben" type="add" issue="7">
        Support for @Record annotated classes can contain other @Record annotated classes and still get proberly imported and exported.
        Especially usefull when you like to store logically grouped domain objects. i.e. creditcard informations inside a record
        containing other information as well.
      </action>
      <action dev="jeyben" type="add" issue="10">
        The ParseException now contains getter methods making it possible to retreive the reasons why the parsing went wrong.
        That makes it easy to build up a custom error message for the user in a localized way instead of just relying on
        the message written in english.
      </action>
    </release>

    <release version="1.2.2" date="2008-10-17" description="Bugfix release.">
      <action dev="jeyben" type="fix" issue="9">
        Fixed issue where data wasn't loaded if the text length was shorter just a bit shorter than the last field in a record.
      </action>
    </release>

    <release version="1.2.1" date="2008-10-15" description="Minor bugfixes as well as support for static nested and inner classes.">
      <action dev="jeyben" type="add" issue="8">
        Added support for processing annotated static nested classes and inner classes.
      </action>
      <action dev="jeyben" type="fix" due-to="Marcos Lois Bermúdez">
        Fixed bug when the setter/getter data type is an interface or abstract class, the format manager failed at runtime determining the datatype.
      </action>
      <action dev="jeyben" type="add" due-to="Marcos Lois Bermúdez" issue="6">
        Added support for primitive datatypes like int, boolean, float etc.
      </action>
    </release>

    <release version="1.2.0" date="2008-06-12" description="Improved error reporting">
      <action dev="jeyben" type="add">
        Improved error reporting when fail to parse a string.
        All details about how data was suppose to be parse will be included in the error message.
        The class and method name of the instance trying to create will be included as well.
      </action>
      <action dev="jeyben" type="add" issue="5">
        Added the ability to annotate methods starting with 'is' in addition to 'get'.
      </action>
    </release>

    <release version="1.1.1" date="2008-05-29" description="Bugfixes and generified">
      <action dev="jeyben" type="add">
        Added the ability to not sign numbers. And made it default
      </action>
      <action dev="jeyben" type="update" issue="4">
        Generified the FixedFormatter interface. Reguires custom formatters to be updated.
      </action>
      <action dev="jeyben" type="fix">
        Fixed bug when parsing numbers from string having prependend signs.
      </action>
      <action dev="jeyben" type="fix">
        Fixed various smaller bugs primarily in predefined formatters.
      </action>
    </release>

    <release version="1.1.0" date="2008-05-26" description="Introduced signing">
      <action dev="jeyben" type="add">
        Introduced ability to parse and format signed numbers.
      </action>
    </release>

    <release version="1.0.0" date="2008-05-25" description="Initial release of fixedformat4j">
      <action dev="jeyben" type="add">
        Initial release of fixedformat4j.
      </action>
    </release>
  </body>
</document>

<!--
    <release version="1.1" date="2005-03-01" description="Subsequent release">
      <action dev="jruiz" type="add">
        Added additional documentation on how to configure the plugin.
      </action>
      <action dev="aramirez" type="fix" issue="MPJIRA-11">
        Enable retrieving component-specific issues.
      </action>
      <action dev="jruiz" type="remove" due-to="Allan Ramirez" due-to-email="aramirez@exist.com">
        The element type " link " must be terminated by the matching end-tag.
        Deleted the erroneous code.
      </action>
    < <action dev="jruiz" type="update" due-to="Allan Ramirez" due-to-email="aramirez@exist.com">
        The element type " link " must be terminated by the matching end-tag.
      </action>
    </release>
-->
